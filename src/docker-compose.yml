version: '3.4'
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=DEBmbwkSrzy9D1T9cJfa
      
  discoveryservice:
    image: consul:latest
    container_name: discoveryservice
    ports:
      - "8500:8500"
    command: ["agent", "-dev", "-client", "0.0.0.0", "-bind", "0.0.0.0"]  

  sqlserver:
    image: microsoft/mssql-server-linux:latest
    container_name: sqlserver
    volumes:
      - sqlserverdata:/var/opt/mssql 
    ports:
      - "1434:1433"
    environment:
      - ACCEPT_EULA=Y 
      - MSSQL_PID=Developer
      - SA_PASSWORD=8jkGh47hnDw89Haq8LN2

  mailserver:
    image: djfarrelly/maildev
    container_name: mailserver
    ports:
      - "25:25"
      - "4000:80"

  logserver:
    image: datalust/seq:latest
    container_name: logserver
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y 

  vehiclemanagementapi:
    image: pitstop/vehiclemanagementapi:latest
    build: 
      context: ./VehicleManagementAPI
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - rabbitmq
      - sqlserver
    ports:
      - "5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApplicationInsights:InstrumentationKey=${PitStopAIKey}

  customermanagementapi:
    image: pitstop/customermanagementapi:latest
    build: 
      context: ./CustomerManagementAPI
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - rabbitmq
      - sqlserver
    ports:
      - "5100"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApplicationInsights:InstrumentationKey=${PitStopAIKey}

  workshopmanagementapi:
    image: pitstop/workshopmanagementapi:latest
    build: 
      context: ./WorkshopManagementAPI
      dockerfile: Dockerfile
    depends_on:
      - discoveryservice
      - rabbitmq
      - sqlserver
    ports:
      - "5200"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApplicationInsights:InstrumentationKey=${PitStopAIKey}

  apigateway:
    image: pitstop/apigateway:latest
    build: 
      context: ./APIGateway
      dockerfile: Dockerfile
    container_name: apigateway
    depends_on:
      - discoveryservice
      - vehiclemanagementapi
      - customermanagementapi
      - workshopmanagementapi
    ports:
      - "10000:10000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApplicationInsights:InstrumentationKey=${PitStopAIKey}

  auditlogservice:
    image: pitstop/auditlogservice:latest
    build: 
      context: ./AuditlogService
      dockerfile: Dockerfile
    container_name: auditlogservice
    depends_on:
      - rabbitmq
    environment:
      - PITSTOP_ENVIRONMENT=Production

  invoiceservice:
    image: pitstop/invoiceservice:latest
    build:
      context: ./InvoiceService
      dockerfile: Dockerfile
    container_name: invoiceservice
    depends_on:
      - rabbitmq
      - sqlserver
    environment:
      - PITSTOP_ENVIRONMENT=Production

  notificationservice:
    image: pitstop/notificationservice:latest
    build:
      context: ./NotificationService
      dockerfile: Dockerfile
    container_name: notificationservice
    depends_on:
      - rabbitmq
      - sqlserver
      - mailserver
    environment:
      - PITSTOP_ENVIRONMENT=Production

  timeservice:
    image: pitstop/timeservice:latest
    build: 
      context: ./TimeService
      dockerfile: Dockerfile
    container_name: timeservice
    depends_on:
      - rabbitmq
    environment:
      - PITSTOP_ENVIRONMENT=Production

  workshopmanagementeventhandler:
    image: pitstop/workshopmanagementeventhandler:latest
    build: 
      context: ./WorkshopManagementEventHandler
      dockerfile: Dockerfile
    container_name: workshopmanagementeventhandler
    depends_on:
      - rabbitmq
      - sqlserver
    environment:
      - PITSTOP_ENVIRONMENT=Production

  webapp:
    image: pitstop/webapp:latest
    build: 
      context: ./WebApp
      dockerfile: Dockerfile
    container_name: webapp
    depends_on:
      - apigateway
    ports:
      - "7000:7000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApplicationInsights:InstrumentationKey=${PitStopAIKey}

volumes:
  sqlserverdata:
    external: true    
  rabbitmqdata:
    external: true
